<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.11.4 on win32)" generated="20240810 12:11:31.894" rpa="false" schemaversion="4">
<suite id="s1" name="Testlab" source="D:\Study\Automation\APIAutomation\TestCases\testlab.robot">
<kw name="HostSession" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysession</arg>
<arg>${Host}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240810 12:11:32.145" level="INFO">Creating Session using : alias=mysession, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240810 12:11:32.144" endtime="20240810 12:11:32.145"/>
</kw>
<status status="PASS" starttime="20240810 12:11:32.144" endtime="20240810 12:11:32.145"/>
</kw>
<test id="s1-t1" name="UserProfileRetrive" line="16">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysession</arg>
<arg>${path}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20240810 12:11:32.443" level="INFO">GET Request : url=https://reqres.in/api/users?page=2 
 path_url=/api/users?page=2 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240810 12:11:32.443" level="INFO">GET Response : url=https://reqres.in/api/users?page=2 
 status=200, reason=OK 
 headers={'Date': 'Sat, 10 Aug 2024 06:41:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1723263375&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=siIa%2BSDplrLHfk0tQzmPrO2q74UM%2BZ9zI1gGItxT%2BMs%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1723263375&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=siIa%2BSDplrLHfk0tQzmPrO2q74UM%2BZ9zI1gGItxT%2BMs%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Etag': 'W/"406-ut0vzoCuidvyMf8arZpMpJ6ZRDw"', 'Via': '1.1 vegur', 'Cache-Control': 'max-age=14400', 'CF-Cache-Status': 'HIT', 'Age': '1499', 'Vary': 'Accept-Encoding', 'Server': 'cloudflare', 'CF-RAY': '8b0e001e2af07f76-MAA', 'Content-Encoding': 'gzip'} 
 body={"page":2,"per_page":6,"total":12,"total_pages":2,"data":[{"id":7,"email":"michael.lawson@reqres.in","first_name":"Michael","last_name":"Lawson","avatar":"https://reqres.in/img/faces/7-image.jpg"},{"id":8,"email":"lindsay.ferguson@reqres.in","first_name":"Lindsay","last_name":"Ferguson","avatar":"https://reqres.in/img/faces/8-image.jpg"},{"id":9,"email":"tobias.funke@reqres.in","first_name":"Tobias","last_name":"Funke","avatar":"https://reqres.in/img/faces/9-image.jpg"},{"id":10,"email":"byron.fields@reqres.in","first_name":"Byron","last_name":"Fields","avatar":"https://reqres.in/img/faces/10-image.jpg"},{"id":11,"email":"george.edwards@reqres.in","first_name":"George","last_name":"Edwards","avatar":"https://reqres.in/img/faces/11-image.jpg"},{"id":12,"email":"rachel.howell@reqres.in","first_name":"Rachel","last_name":"Howell","avatar":"https://reqres.in/img/faces/12-image.jpg"}],"support":{"url":"https://reqres.in/#support-heading","text":"To keep ReqRes free, contributions towards server costs are appreciated!"}} 
 </msg>
<msg timestamp="20240810 12:11:32.444" level="INFO">C:\Program Files\Python311\Lib\site-packages\urllib3\connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'reqres.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20240810 12:11:32.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240810 12:11:32.147" endtime="20240810 12:11:32.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240810 12:11:32.445" level="INFO">200</msg>
<status status="PASS" starttime="20240810 12:11:32.445" endtime="20240810 12:11:32.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.content}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240810 12:11:32.446" level="INFO">{"page":2,"per_page":6,"total":12,"total_pages":2,"data":[{"id":7,"email":"michael.lawson@reqres.in","first_name":"Michael","last_name":"Lawson","avatar":"https://reqres.in/img/faces/7-image.jpg"},{"id":8,"email":"lindsay.ferguson@reqres.in","first_name":"Lindsay","last_name":"Ferguson","avatar":"https://reqres.in/img/faces/8-image.jpg"},{"id":9,"email":"tobias.funke@reqres.in","first_name":"Tobias","last_name":"Funke","avatar":"https://reqres.in/img/faces/9-image.jpg"},{"id":10,"email":"byron.fields@reqres.in","first_name":"Byron","last_name":"Fields","avatar":"https://reqres.in/img/faces/10-image.jpg"},{"id":11,"email":"george.edwards@reqres.in","first_name":"George","last_name":"Edwards","avatar":"https://reqres.in/img/faces/11-image.jpg"},{"id":12,"email":"rachel.howell@reqres.in","first_name":"Rachel","last_name":"Howell","avatar":"https://reqres.in/img/faces/12-image.jpg"}],"support":{"url":"https://reqres.in/#support-heading","text":"To keep ReqRes free, contributions towards server costs are appreciated!"}}</msg>
<status status="PASS" starttime="20240810 12:11:32.446" endtime="20240810 12:11:32.446"/>
</kw>
<kw name="StatusCode_Validation">
<arg>${response.status_code}</arg>
<kw name="Log" library="BuiltIn">
<arg>${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240810 12:11:32.448" level="INFO">200</msg>
<status status="PASS" starttime="20240810 12:11:32.448" endtime="20240810 12:11:32.448"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${code}</var>
<arg>${statuscode}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240810 12:11:32.449" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20240810 12:11:32.448" endtime="20240810 12:11:32.449"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should match regexp</arg>
<arg>${code}</arg>
<arg>[0-9]</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${code}</arg>
<arg>[0-9]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240810 12:11:32.449" endtime="20240810 12:11:32.449"/>
</kw>
<status status="PASS" starttime="20240810 12:11:32.449" endtime="20240810 12:11:32.449"/>
</kw>
<status status="PASS" starttime="20240810 12:11:32.447" endtime="20240810 12:11:32.449"/>
</kw>
<kw name="ResponseContent_Validation">
<arg>${response.content}</arg>
<kw name="Log" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240810 12:11:32.452" level="INFO">{"page":2,"per_page":6,"total":12,"total_pages":2,"data":[{"id":7,"email":"michael.lawson@reqres.in","first_name":"Michael","last_name":"Lawson","avatar":"https://reqres.in/img/faces/7-image.jpg"},{"id":8,"email":"lindsay.ferguson@reqres.in","first_name":"Lindsay","last_name":"Ferguson","avatar":"https://reqres.in/img/faces/8-image.jpg"},{"id":9,"email":"tobias.funke@reqres.in","first_name":"Tobias","last_name":"Funke","avatar":"https://reqres.in/img/faces/9-image.jpg"},{"id":10,"email":"byron.fields@reqres.in","first_name":"Byron","last_name":"Fields","avatar":"https://reqres.in/img/faces/10-image.jpg"},{"id":11,"email":"george.edwards@reqres.in","first_name":"George","last_name":"Edwards","avatar":"https://reqres.in/img/faces/11-image.jpg"},{"id":12,"email":"rachel.howell@reqres.in","first_name":"Rachel","last_name":"Howell","avatar":"https://reqres.in/img/faces/12-image.jpg"}],"support":{"url":"https://reqres.in/#support-heading","text":"To keep ReqRes free, contributions towards server costs are appreciated!"}}</msg>
<status status="PASS" starttime="20240810 12:11:32.451" endtime="20240810 12:11:32.452"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${payload}''')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240810 12:11:32.452" level="INFO">${json} = {'page': 2, 'per_page': 6, 'total': 12, 'total_pages': 2, 'data': [{'id': 7, 'email': 'michael.lawson@reqres.in', 'first_name': 'Michael', 'last_name': 'Lawson', 'avatar': 'https://reqres.in/img/faces...</msg>
<status status="PASS" starttime="20240810 12:11:32.452" endtime="20240810 12:11:32.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${json}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240810 12:11:32.453" level="INFO">{'page': 2, 'per_page': 6, 'total': 12, 'total_pages': 2, 'data': [{'id': 7, 'email': 'michael.lawson@reqres.in', 'first_name': 'Michael', 'last_name': 'Lawson', 'avatar': 'https://reqres.in/img/faces/7-image.jpg'}, {'id': 8, 'email': 'lindsay.ferguson@reqres.in', 'first_name': 'Lindsay', 'last_name': 'Ferguson', 'avatar': 'https://reqres.in/img/faces/8-image.jpg'}, {'id': 9, 'email': 'tobias.funke@reqres.in', 'first_name': 'Tobias', 'last_name': 'Funke', 'avatar': 'https://reqres.in/img/faces/9-image.jpg'}, {'id': 10, 'email': 'byron.fields@reqres.in', 'first_name': 'Byron', 'last_name': 'Fields', 'avatar': 'https://reqres.in/img/faces/10-image.jpg'}, {'id': 11, 'email': 'george.edwards@reqres.in', 'first_name': 'George', 'last_name': 'Edwards', 'avatar': 'https://reqres.in/img/faces/11-image.jpg'}, {'id': 12, 'email': 'rachel.howell@reqres.in', 'first_name': 'Rachel', 'last_name': 'Howell', 'avatar': 'https://reqres.in/img/faces/12-image.jpg'}], 'support': {'url': 'https://reqres.in/#support-heading', 'text': 'To keep ReqRes free, contributions towards server costs are appreciated!'}}</msg>
<status status="PASS" starttime="20240810 12:11:32.453" endtime="20240810 12:11:32.453"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as integers</arg>
<arg>${json['data'][0]['id']}</arg>
<arg>7</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json['data'][0]['id']}</arg>
<arg>7</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240810 12:11:32.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240810 12:11:32.454" endtime="20240810 12:11:32.455"/>
</kw>
<status status="PASS" starttime="20240810 12:11:32.453" endtime="20240810 12:11:32.455"/>
</kw>
<status status="PASS" starttime="20240810 12:11:32.450" endtime="20240810 12:11:32.455"/>
</kw>
<tag>regression</tag>
<tag>sanity</tag>
<status status="PASS" starttime="20240810 12:11:32.146" endtime="20240810 12:11:32.455"/>
</test>
<test id="s1-t2" name="DeleteUserProfile" line="25">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysession</arg>
<arg>${d_path}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20240810 12:11:32.812" level="INFO">DELETE Request : url=https://reqres.in/api/users/2 
 path_url=/api/users/2 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240810 12:11:32.812" level="INFO">DELETE Response : url=https://reqres.in/api/users/2 
 status=204, reason=No Content 
 headers={'Date': 'Sat, 10 Aug 2024 06:41:29 GMT', 'Content-Length': '0', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1723272089&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=q0DvxUG18hY%2B5n6cVQunWBoiwSW6wj%2Fdq2GRrP%2BEcRY%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1723272089&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=q0DvxUG18hY%2B5n6cVQunWBoiwSW6wj%2Fdq2GRrP%2BEcRY%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '8b0e001e6b377f76-MAA'} 
 body=None 
 </msg>
<msg timestamp="20240810 12:11:32.813" level="INFO">C:\Program Files\Python311\Lib\site-packages\urllib3\connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'reqres.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20240810 12:11:32.813" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20240810 12:11:32.457" endtime="20240810 12:11:32.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240810 12:11:32.815" level="INFO">204</msg>
<status status="PASS" starttime="20240810 12:11:32.814" endtime="20240810 12:11:32.815"/>
</kw>
<kw name="StatusCode_Validation">
<arg>${response.status_code}</arg>
<kw name="Log" library="BuiltIn">
<arg>${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240810 12:11:32.817" level="INFO">204</msg>
<status status="PASS" starttime="20240810 12:11:32.817" endtime="20240810 12:11:32.817"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${code}</var>
<arg>${statuscode}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240810 12:11:32.818" level="INFO">${code} = 204</msg>
<status status="PASS" starttime="20240810 12:11:32.817" endtime="20240810 12:11:32.818"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should match regexp</arg>
<arg>${code}</arg>
<arg>[0-9]</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${code}</arg>
<arg>[0-9]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240810 12:11:32.818" endtime="20240810 12:11:32.819"/>
</kw>
<status status="PASS" starttime="20240810 12:11:32.818" endtime="20240810 12:11:32.819"/>
</kw>
<status status="PASS" starttime="20240810 12:11:32.815" endtime="20240810 12:11:32.819"/>
</kw>
<tag>del</tag>
<tag>regression</tag>
<tag>sanity</tag>
<status status="PASS" starttime="20240810 12:11:32.457" endtime="20240810 12:11:32.819"/>
</test>
<test id="s1-t3" name="StoreUserProfile" line="32">
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>name=morpheus</arg>
<arg>job=leader</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240810 12:11:32.823" level="INFO">${body} = {'name': 'morpheus', 'job': 'leader'}</msg>
<status status="PASS" starttime="20240810 12:11:32.822" endtime="20240810 12:11:32.823"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240810 12:11:32.824" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20240810 12:11:32.823" endtime="20240810 12:11:32.824"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${response}</var>
<arg>mysession</arg>
<arg>${store_path}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<msg timestamp="20240810 12:11:32.824" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20240810 12:11:33.166" level="INFO">POST Request : url=https://reqres.in/api/users 
 path_url=/api/users 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '37'} 
 body={"name": "morpheus", "job": "leader"} 
 </msg>
<msg timestamp="20240810 12:11:33.167" level="INFO">POST Response : url=https://reqres.in/api/users 
 status=201, reason=Created 
 headers={'Date': 'Sat, 10 Aug 2024 06:41:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '84', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1723272089&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=q0DvxUG18hY%2B5n6cVQunWBoiwSW6wj%2Fdq2GRrP%2BEcRY%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1723272089&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=q0DvxUG18hY%2B5n6cVQunWBoiwSW6wj%2Fdq2GRrP%2BEcRY%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Etag': 'W/"54-I0W73SC/M2+ag1A0RR5veFdWzJQ"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '8b0e0020adfb7f76-MAA'} 
 body={"name":"morpheus","job":"leader","id":"932","createdAt":"2024-08-10T06:41:29.961Z"} 
 </msg>
<msg timestamp="20240810 12:11:33.167" level="INFO">C:\Program Files\Python311\Lib\site-packages\urllib3\connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'reqres.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20240810 12:11:33.168" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240810 12:11:32.824" endtime="20240810 12:11:33.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240810 12:11:33.169" level="INFO">201</msg>
<status status="PASS" starttime="20240810 12:11:33.168" endtime="20240810 12:11:33.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.content}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240810 12:11:33.170" level="INFO">{"name":"morpheus","job":"leader","id":"932","createdAt":"2024-08-10T06:41:29.961Z"}</msg>
<status status="PASS" starttime="20240810 12:11:33.169" endtime="20240810 12:11:33.170"/>
</kw>
<kw name="StatusCode_Validation">
<arg>${response.status_code}</arg>
<kw name="Log" library="BuiltIn">
<arg>${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240810 12:11:33.172" level="INFO">201</msg>
<status status="PASS" starttime="20240810 12:11:33.172" endtime="20240810 12:11:33.172"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${code}</var>
<arg>${statuscode}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240810 12:11:33.173" level="INFO">${code} = 201</msg>
<status status="PASS" starttime="20240810 12:11:33.173" endtime="20240810 12:11:33.173"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should match regexp</arg>
<arg>${code}</arg>
<arg>[0-9]</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${code}</arg>
<arg>[0-9]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240810 12:11:33.173" endtime="20240810 12:11:33.174"/>
</kw>
<status status="PASS" starttime="20240810 12:11:33.173" endtime="20240810 12:11:33.174"/>
</kw>
<status status="PASS" starttime="20240810 12:11:33.171" endtime="20240810 12:11:33.174"/>
</kw>
<kw name="ResponseContent_Validation_1">
<arg>${response.content}</arg>
<kw name="Log" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240810 12:11:33.175" level="INFO">{"name":"morpheus","job":"leader","id":"932","createdAt":"2024-08-10T06:41:29.961Z"}</msg>
<status status="PASS" starttime="20240810 12:11:33.175" endtime="20240810 12:11:33.175"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${payload}''')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240810 12:11:33.176" level="INFO">${json} = {'name': 'morpheus', 'job': 'leader', 'id': '932', 'createdAt': '2024-08-10T06:41:29.961Z'}</msg>
<status status="PASS" starttime="20240810 12:11:33.175" endtime="20240810 12:11:33.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${json}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240810 12:11:33.176" level="INFO">{'name': 'morpheus', 'job': 'leader', 'id': '932', 'createdAt': '2024-08-10T06:41:29.961Z'}</msg>
<status status="PASS" starttime="20240810 12:11:33.176" endtime="20240810 12:11:33.176"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as strings</arg>
<arg>${json['name']}</arg>
<arg>morpheus</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${json['name']}</arg>
<arg>morpheus</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240810 12:11:33.176" endtime="20240810 12:11:33.177"/>
</kw>
<status status="PASS" starttime="20240810 12:11:33.176" endtime="20240810 12:11:33.177"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as strings</arg>
<arg>${json['job']}</arg>
<arg>leader</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${json['job']}</arg>
<arg>leader</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240810 12:11:33.178" endtime="20240810 12:11:33.179"/>
</kw>
<status status="PASS" starttime="20240810 12:11:33.177" endtime="20240810 12:11:33.179"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should match regexp</arg>
<arg>${json['id']}</arg>
<arg>[0-9]</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${json['id']}</arg>
<arg>[0-9]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240810 12:11:33.179" endtime="20240810 12:11:33.180"/>
</kw>
<status status="PASS" starttime="20240810 12:11:33.179" endtime="20240810 12:11:33.180"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should match regexp</arg>
<arg>${json['createdAt']}</arg>
<arg>[a-zA-Z0-9:.]</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${json['createdAt']}</arg>
<arg>[a-zA-Z0-9:.]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240810 12:11:33.181" endtime="20240810 12:11:33.182"/>
</kw>
<status status="PASS" starttime="20240810 12:11:33.181" endtime="20240810 12:11:33.182"/>
</kw>
<status status="PASS" starttime="20240810 12:11:33.174" endtime="20240810 12:11:33.182"/>
</kw>
<tag>regression</tag>
<tag>sanity</tag>
<status status="PASS" starttime="20240810 12:11:32.822" endtime="20240810 12:11:33.183"/>
</test>
<test id="s1-t4" name="StoreUserProfile_1" line="43">
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>name=shakti</arg>
<arg>job=engineer</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240810 12:11:33.184" level="INFO">${body} = {'name': 'shakti', 'job': 'engineer'}</msg>
<status status="PASS" starttime="20240810 12:11:33.184" endtime="20240810 12:11:33.184"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240810 12:11:33.185" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20240810 12:11:33.185" endtime="20240810 12:11:33.185"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${response}</var>
<arg>mysession</arg>
<arg>${store_path}</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<msg timestamp="20240810 12:11:33.186" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20240810 12:11:33.531" level="INFO">POST Request : url=https://reqres.in/api/users 
 path_url=/api/users 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '37'} 
 body={"name": "shakti", "job": "engineer"} 
 </msg>
<msg timestamp="20240810 12:11:33.532" level="INFO">POST Response : url=https://reqres.in/api/users 
 status=201, reason=Created 
 headers={'Date': 'Sat, 10 Aug 2024 06:41:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '84', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1723272090&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=LHF4qzagRFFpzxnBufOQPzoO%2BjwJT3W8QbMJdWtC0ak%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1723272090&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=LHF4qzagRFFpzxnBufOQPzoO%2BjwJT3W8QbMJdWtC0ak%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Etag': 'W/"54-SwolxTfLctuJi8N7j+E83OazYkI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '8b0e0022f8877f76-MAA'} 
 body={"name":"shakti","job":"engineer","id":"337","createdAt":"2024-08-10T06:41:30.327Z"} 
 </msg>
<msg timestamp="20240810 12:11:33.532" level="INFO">C:\Program Files\Python311\Lib\site-packages\urllib3\connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'reqres.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20240810 12:11:33.533" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240810 12:11:33.186" endtime="20240810 12:11:33.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240810 12:11:33.534" level="INFO">201</msg>
<status status="PASS" starttime="20240810 12:11:33.533" endtime="20240810 12:11:33.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.content}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240810 12:11:33.575" level="INFO">{"name":"shakti","job":"engineer","id":"337","createdAt":"2024-08-10T06:41:30.327Z"}</msg>
<status status="PASS" starttime="20240810 12:11:33.574" endtime="20240810 12:11:33.576"/>
</kw>
<kw name="StatusCode_Validation">
<arg>${response.status_code}</arg>
<kw name="Log" library="BuiltIn">
<arg>${statuscode}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240810 12:11:33.765" level="INFO">201</msg>
<status status="PASS" starttime="20240810 12:11:33.764" endtime="20240810 12:11:33.765"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${code}</var>
<arg>${statuscode}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240810 12:11:33.765" level="INFO">${code} = 201</msg>
<status status="PASS" starttime="20240810 12:11:33.765" endtime="20240810 12:11:33.765"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should match regexp</arg>
<arg>${code}</arg>
<arg>[0-9]</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${code}</arg>
<arg>[0-9]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240810 12:11:33.766" endtime="20240810 12:11:33.766"/>
</kw>
<status status="PASS" starttime="20240810 12:11:33.765" endtime="20240810 12:11:33.766"/>
</kw>
<status status="PASS" starttime="20240810 12:11:33.763" endtime="20240810 12:11:33.766"/>
</kw>
<kw name="ResponseContent_Validation_2">
<arg>${response.content}</arg>
<kw name="Log" library="BuiltIn">
<arg>${payload}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240810 12:11:33.768" level="INFO">{"name":"shakti","job":"engineer","id":"337","createdAt":"2024-08-10T06:41:30.327Z"}</msg>
<status status="PASS" starttime="20240810 12:11:33.768" endtime="20240810 12:11:33.768"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${payload}''')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240810 12:11:33.769" level="INFO">${json} = {'name': 'shakti', 'job': 'engineer', 'id': '337', 'createdAt': '2024-08-10T06:41:30.327Z'}</msg>
<status status="PASS" starttime="20240810 12:11:33.768" endtime="20240810 12:11:33.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${json}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240810 12:11:33.769" level="INFO">{'name': 'shakti', 'job': 'engineer', 'id': '337', 'createdAt': '2024-08-10T06:41:30.327Z'}</msg>
<status status="PASS" starttime="20240810 12:11:33.769" endtime="20240810 12:11:33.769"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as strings</arg>
<arg>${json['name']}</arg>
<arg>shakti</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${json['name']}</arg>
<arg>shakti</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240810 12:11:33.770" endtime="20240810 12:11:33.771"/>
</kw>
<status status="PASS" starttime="20240810 12:11:33.769" endtime="20240810 12:11:33.771"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as strings</arg>
<arg>${json['job']}</arg>
<arg>engineer</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${json['job']}</arg>
<arg>engineer</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240810 12:11:33.771" endtime="20240810 12:11:33.772"/>
</kw>
<status status="PASS" starttime="20240810 12:11:33.771" endtime="20240810 12:11:33.772"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should match regexp</arg>
<arg>${json['id']}</arg>
<arg>[0-9]</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${json['id']}</arg>
<arg>[0-9]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240810 12:11:33.772" endtime="20240810 12:11:33.773"/>
</kw>
<status status="PASS" starttime="20240810 12:11:33.772" endtime="20240810 12:11:33.773"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should match regexp</arg>
<arg>${json['createdAt']}</arg>
<arg>[a-zA-Z0-9:.]</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${json['createdAt']}</arg>
<arg>[a-zA-Z0-9:.]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20240810 12:11:33.773" endtime="20240810 12:11:33.774"/>
</kw>
<status status="PASS" starttime="20240810 12:11:33.773" endtime="20240810 12:11:33.774"/>
</kw>
<status status="PASS" starttime="20240810 12:11:33.767" endtime="20240810 12:11:33.775"/>
</kw>
<tag>regression</tag>
<status status="PASS" starttime="20240810 12:11:33.183" endtime="20240810 12:11:33.775"/>
</test>
<status status="PASS" starttime="20240810 12:11:31.900" endtime="20240810 12:11:33.777"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">del</stat>
<stat pass="4" fail="0" skip="0">regression</stat>
<stat pass="3" fail="0" skip="0">sanity</stat>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="Testlab">Testlab</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20240810 12:11:32.824" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20240810 12:11:33.186" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
</errors>
</robot>
